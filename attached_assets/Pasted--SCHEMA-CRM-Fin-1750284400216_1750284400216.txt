-- =============================================================================
-- SCHEMA: CRM (Final and Complete)
-- PURPOSE: Contains all user-created business logic, including projects,
--          companies, tasks, checklists, calendar events, and automation rules.
-- =============================================================================

CREATE SCHEMA IF NOT EXISTS crm;

-- =============================================================================
-- ENUMERATED TYPES
-- =============================================================================
CREATE TYPE crm.action_type AS ENUM ('create_task', 'create_calendar_event');
COMMENT ON TYPE crm.action_type IS 'Defines the types of automated actions that can be triggered.';

CREATE TYPE crm.trigger_type AS ENUM ('reaction', 'hashtag');
COMMENT ON TYPE crm.trigger_type IS 'Defines the method that triggers an automated action (e.g., an emoji reaction or a hashtag in a message).';


-- =============================================================================
-- CORE TABLE STRUCTURES
-- =============================================================================

---
--- TABLE: crm.action_mappings
--- PURPOSE: The "rulebook" for workflow automation. Maps triggers to actions.
---
CREATE TABLE crm.action_mappings (
    mapping_id SERIAL PRIMARY KEY,
    instance_id VARCHAR(100) NOT NULL,
    trigger_type crm.trigger_type NOT NULL,
    trigger_value VARCHAR(50) NOT NULL, -- The emoji 'âœ…' or hashtag '#task'
    action_type crm.action_type NOT NULL,
    default_title VARCHAR(255),
    is_active BOOLEAN DEFAULT TRUE NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    CONSTRAINT uq_instance_trigger UNIQUE (instance_id, trigger_type, trigger_value),
    CONSTRAINT fk_instance FOREIGN KEY(instance_id) REFERENCES whatsapp.instances(instance_id) ON DELETE CASCADE
);
COMMENT ON TABLE crm.action_mappings IS 'Stores user-defined mappings from a trigger (emoji or hashtag) to a specific automated action.';

---
--- TABLE: crm.empresas
--- PURPOSE: Stores company/organization information.
---
CREATE TABLE crm.empresas (
    empresa_id SERIAL PRIMARY KEY,
    instance_id VARCHAR(100) NOT NULL,
    space_id INTEGER NOT NULL,
    nombre VARCHAR(255) NOT NULL,
    sitio_web VARCHAR(255),
    industria VARCHAR(100),
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    CONSTRAINT fk_instance FOREIGN KEY(instance_id) REFERENCES whatsapp.instances(instance_id) ON DELETE CASCADE,
    CONSTRAINT fk_space FOREIGN KEY(space_id) REFERENCES app.spaces(space_id) ON DELETE CASCADE
);
COMMENT ON TABLE crm.empresas IS 'Stores company/organization information, organized by space.';

---
--- TABLE: crm.contact_details
--- PURPOSE: Enriches raw WhatsApp contacts with CRM-specific data.
---
CREATE TABLE crm.contact_details (
    contact_detail_id SERIAL PRIMARY KEY,
    instance_id VARCHAR(100) NOT NULL,
    contact_jid VARCHAR(100) NOT NULL,
    empresa_id INTEGER,
    assigned_to_user_id UUID,
    email_address VARCHAR(255),
    lifecycle_stage VARCHAR(50),
    -- Add any other custom fields you need here
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    UNIQUE (instance_id, contact_jid),
    CONSTRAINT fk_instance FOREIGN KEY(instance_id) REFERENCES whatsapp.instances(instance_id) ON DELETE CASCADE,
    CONSTRAINT fk_contact FOREIGN KEY(contact_jid, instance_id) REFERENCES whatsapp.contacts(jid, instance_id) ON DELETE CASCADE,
    CONSTRAINT fk_empresa FOREIGN KEY(empresa_id) REFERENCES crm.empresas(empresa_id) ON DELETE SET NULL,
    CONSTRAINT fk_assigned_user FOREIGN KEY(assigned_to_user_id) REFERENCES app.users(user_id) ON DELETE SET NULL
);
COMMENT ON TABLE crm.contact_details IS 'Enriches raw WhatsApp contacts with user-defined CRM data like company and owner.';

---
--- TABLE: crm.projects
--- PURPOSE: Groups tasks into larger initiatives.
---
CREATE TABLE crm.projects (
    project_id SERIAL PRIMARY KEY,
    instance_id VARCHAR(100) NOT NULL,
    space_id INTEGER NOT NULL,
    project_name VARCHAR(255) NOT NULL,
    description TEXT,
    status VARCHAR(50) DEFAULT 'active' NOT NULL,
    start_date DATE,
    end_date DATE,
    empresa_id INTEGER,
    owner_user_id UUID,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    CONSTRAINT fk_instance FOREIGN KEY(instance_id) REFERENCES whatsapp.instances(instance_id) ON DELETE CASCADE,
    CONSTRAINT fk_space FOREIGN KEY(space_id) REFERENCES app.spaces(space_id) ON DELETE CASCADE,
    CONSTRAINT fk_empresa FOREIGN KEY(empresa_id) REFERENCES crm.empresas(empresa_id) ON DELETE SET NULL,
    CONSTRAINT fk_owner_user FOREIGN KEY(owner_user_id) REFERENCES app.users(user_id) ON DELETE SET NULL
);
COMMENT ON TABLE crm.projects IS 'Stores high-level projects that can group tasks and be associated with companies.';

---
--- TABLE: crm.tasks
--- PURPOSE: The core unit of work, supporting subtasks and checklists.
---
CREATE TABLE crm.tasks (
    task_id SERIAL PRIMARY KEY,
    instance_id VARCHAR(100) NOT NULL,
    space_id INTEGER NOT NULL,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    status VARCHAR(50) DEFAULT 'pending' NOT NULL,
    due_date TIMESTAMPTZ,
    priority VARCHAR(50) DEFAULT 'medium',
    project_id INTEGER,
    parent_task_id INTEGER,
    triggering_message_id VARCHAR(255),
    assigned_to_user_id UUID,
    related_chat_jid VARCHAR(100),
    created_by_user_id UUID,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    CONSTRAINT fk_instance FOREIGN KEY(instance_id) REFERENCES whatsapp.instances(instance_id) ON DELETE CASCADE,
    CONSTRAINT fk_space FOREIGN KEY(space_id) REFERENCES app.spaces(space_id) ON DELETE CASCADE,
    CONSTRAINT fk_project FOREIGN KEY(project_id) REFERENCES crm.projects(project_id) ON DELETE CASCADE,
    CONSTRAINT fk_parent_task FOREIGN KEY(parent_task_id) REFERENCES crm.tasks(task_id) ON DELETE CASCADE,
    CONSTRAINT fk_triggering_message FOREIGN KEY(triggering_message_id, instance_id) REFERENCES whatsapp.messages(message_id, instance_id) ON DELETE SET NULL,
    CONSTRAINT fk_assigned_user FOREIGN KEY(assigned_to_user_id) REFERENCES app.users(user_id) ON DELETE SET NULL,
    CONSTRAINT fk_created_by_user FOREIGN KEY(created_by_user_id) REFERENCES app.users(user_id) ON DELETE SET NULL,
    CONSTRAINT fk_related_chat FOREIGN KEY(related_chat_jid, instance_id) REFERENCES whatsapp.chats(chat_id, instance_id) ON DELETE SET NULL
);
COMMENT ON TABLE crm.tasks IS 'Stores actionable to-do items. Can be a simple task or a "list" with checklist items.';

---
--- TABLE: crm.task_checklist_items
--- PURPOSE: Stores checklist items for a task instance.
---
CREATE TABLE crm.task_checklist_items (
    item_id SERIAL PRIMARY KEY,
    task_id INTEGER NOT NULL,
    instance_id VARCHAR(100) NOT NULL,
    content TEXT NOT NULL,
    is_completed BOOLEAN DEFAULT FALSE NOT NULL,
    display_order INTEGER DEFAULT 0 NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    CONSTRAINT fk_task FOREIGN KEY (task_id) REFERENCES crm.tasks(task_id) ON DELETE CASCADE,
    CONSTRAINT fk_instance FOREIGN KEY(instance_id) REFERENCES whatsapp.instances(instance_id) ON DELETE CASCADE
);
COMMENT ON TABLE crm.task_checklist_items IS 'Stores individual checklist items for a parent task.';

---
--- TABLE: crm.list_templates
--- PURPOSE: Stores reusable checklist templates.
---
CREATE TABLE crm.list_templates (
    template_id SERIAL PRIMARY KEY,
    instance_id VARCHAR(100) NOT NULL,
    space_id INTEGER NOT NULL,
    template_name VARCHAR(255) NOT NULL,
    description TEXT,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    CONSTRAINT fk_instance FOREIGN KEY(instance_id) REFERENCES whatsapp.instances(instance_id) ON DELETE CASCADE,
    CONSTRAINT fk_space FOREIGN KEY(space_id) REFERENCES app.spaces(space_id) ON DELETE CASCADE
);
COMMENT ON TABLE crm.list_templates IS 'Stores reusable templates for checklists or lists of tasks.';

---
--- TABLE: crm.list_template_items
--- PURPOSE: Stores the default items for a given list template.
---
CREATE TABLE crm.list_template_items (
    template_item_id SERIAL PRIMARY KEY,
    template_id INTEGER NOT NULL,
    content TEXT NOT NULL,
    display_order INTEGER DEFAULT 0 NOT NULL,
    default_assigned_to_user_id UUID,
    CONSTRAINT fk_template FOREIGN KEY(template_id) REFERENCES crm.list_templates(template_id) ON DELETE CASCADE,
    CONSTRAINT fk_default_user FOREIGN KEY(default_assigned_to_user_id) REFERENCES app.users(user_id) ON DELETE SET NULL
);
COMMENT ON TABLE crm.list_template_items IS 'Stores the individual default items for a list template.';

---
--- TABLE: crm.calendar_events
---
CREATE TABLE crm.calendar_events (
    event_id SERIAL PRIMARY KEY,
    instance_id VARCHAR(100) NOT NULL,
    space_id INTEGER NOT NULL,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    start_time TIMESTAMPTZ NOT NULL,
    end_time TIMESTAMPTZ NOT NULL,
    location VARCHAR(255),
    is_all_day BOOLEAN DEFAULT FALSE NOT NULL,
    created_by_user_id UUID,
    triggering_message_id VARCHAR(255),
    project_id INTEGER,
    task_id INTEGER,
    related_chat_jid VARCHAR(100),
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    CONSTRAINT fk_instance FOREIGN KEY(instance_id) REFERENCES whatsapp.instances(instance_id) ON DELETE CASCADE,
    CONSTRAINT fk_space FOREIGN KEY(space_id) REFERENCES app.spaces(space_id) ON DELETE CASCADE,
    CONSTRAINT fk_created_by_user FOREIGN KEY(created_by_user_id) REFERENCES app.users(user_id) ON DELETE SET NULL,
    CONSTRAINT fk_triggering_message FOREIGN KEY(triggering_message_id, instance_id) REFERENCES whatsapp.messages(message_id, instance_id) ON DELETE SET NULL,
    CONSTRAINT fk_project FOREIGN KEY(project_id) REFERENCES crm.projects(project_id) ON DELETE SET NULL,
    CONSTRAINT fk_task FOREIGN KEY(task_id) REFERENCES crm.tasks(task_id) ON DELETE SET NULL,
    CONSTRAINT fk_related_chat FOREIGN KEY(related_chat_jid, instance_id) REFERENCES whatsapp.chats(chat_id, instance_id) ON DELETE SET NULL,
    CONSTRAINT chk_end_time CHECK (end_time >= start_time)
);
COMMENT ON TABLE crm.calendar_events IS 'Stores user-created calendar events, organized by space.';

---
--- TABLE: crm.event_attendees
---
CREATE TABLE crm.event_attendees (
    event_id INTEGER NOT NULL,
    attendee_user_id UUID NOT NULL,
    status VARCHAR(50) DEFAULT 'pending' NOT NULL,
    PRIMARY KEY (event_id, attendee_user_id),
    CONSTRAINT fk_event FOREIGN KEY(event_id) REFERENCES crm.calendar_events(event_id) ON DELETE CASCADE,
    CONSTRAINT fk_attendee FOREIGN KEY(attendee_user_id) REFERENCES app.users(user_id) ON DELETE CASCADE
);
COMMENT ON TABLE crm.event_attendees IS 'Links internal app users to the calendar events they are attending.';