-- Unified entity view
CREATE VIEW cortex_intel.all_entities AS
SELECT 
    p.id, 'person' as entity_type, p.full_name as name, 
    p.primary_whatsapp_jid as primary_contact, p.created_at, p.updated_at,
    jsonb_build_object(
        'first_name', p.first_name, 'profession', p.profession,
        'whatsapp_linked', p.is_whatsapp_linked
    ) as metadata
FROM cortex_entities.persons p WHERE p.is_active = TRUE
UNION ALL
SELECT 
    c.id, 'company' as entity_type, c.name,
    COALESCE(c.main_email, c.main_phone) as primary_contact, c.created_at, c.updated_at,
    jsonb_build_object(
        'business_type', c.business_type, 'industry', c.industry,
        'is_client', c.is_client, 'is_vendor', c.is_vendor
    ) as metadata
FROM cortex_entities.companies c WHERE c.status = 'active'
UNION ALL
SELECT 
    pr.id, 'project' as entity_type, pr.name,
    pr.description as primary_contact, pr.created_at, pr.updated_at,
    jsonb_build_object(
        'status', pr.status, 'progress', pr.progress_percentage,
        'budget', pr.budget, 'owner_id', pr.owner_entity_id
    ) as metadata
FROM cortex_projects.projects pr
UNION ALL
SELECT 
    o.id, 'object' as entity_type, o.name,
    o.location as primary_contact, o.created_at, o.updated_at,
    jsonb_build_object(
        'object_type', o.object_type, 'brand', o.brand,
        'current_value', o.current_value, 'owner_id', o.current_owner_entity_id
    ) as metadata
FROM cortex_entities.objects o WHERE o.status = 'active'
UNION ALL
SELECT 
    g.id, 'group' as entity_type, g.name,
    g.description as primary_contact, g.created_at, g.updated_at,
    jsonb_build_object(
        'group_type', g.group_type, 'whatsapp_linked', g.is_whatsapp_linked
    ) as metadata
FROM cortex_entities.groups g WHERE g.status = 'active'
UNION ALL
SELECT 
    a.id, 'account' as entity_type, a.name,
    a.institution_name as primary_contact, a.created_at, a.updated_at,
    jsonb_build_object(
        'account_type', a.account_type, 'balance', a.current_balance,
        'currency', a.currency
    ) as metadata
FROM cortex_finance.accounts a WHERE a.status = 'active'
UNION ALL
SELECT 
    s.id, 'space' as entity_type, s.name,
    s.description as primary_contact, s.created_at, s.updated_at,
    jsonb_build_object(
        'space_type', s.space_type, 'privacy', s.privacy,
        'is_starred', s.is_starred
    ) as metadata
FROM cortex_foundation.spaces s WHERE s.is_archived = FALSE;

-- Unified content view
CREATE VIEW cortex_intel.all_content AS
SELECT 
    t.id, 'task' as content_type, t.title, t.description,
    t.created_at, t.updated_at,
    jsonb_build_object(
        'status', t.status, 'priority', t.priority,
        'assigned_to', t.assigned_to_entity_id, 'project_id', t.project_entity_id
    ) as metadata
FROM cortex_projects.tasks t
UNION ALL
SELECT 
    n.id, 'note' as content_type, n.title, LEFT(n.content, 200) as description,
    n.created_at, n.updated_at,
    jsonb_build_object(
        'note_type', n.note_type, 'word_count', n.word_count,
        'is_pinned', n.is_pinned
    ) as metadata
FROM cortex_knowledge.notes n WHERE n.is_archived = FALSE
UNION ALL
SELECT 
    d.id, 'document' as content_type, COALESCE(d.title, d.filename) as title, d.description,
    d.created_at, d.updated_at,
    jsonb_build_object(
        'document_type', d.document_type, 'mime_type', d.mime_type,
        'google_drive_id', d.google_drive_file_id
    ) as metadata
FROM cortex_knowledge.documents d WHERE d.is_deleted = FALSE
UNION ALL
SELECT 
    e.id, 'event' as content_type, e.title, e.description,
    e.created_at, e.updated_at,
    jsonb_build_object(
        'start_time', e.start_time, 'end_time', e.end_time,
        'location', e.location, 'status', e.status
    ) as metadata
FROM cortex_scheduling.events e
UNION ALL
SELECT 
    tr.id, 'transaction' as content_type, tr.description as title,
    'Amount: ' || tr.amount || ' ' || 
    COALESCE((SELECT currency FROM cortex_finance.accounts WHERE id = tr.from_account_entity_id), 'USD') as description,
    tr.created_at, tr.updated_at,
    jsonb_build_object(
        'amount', tr.amount, 'transaction_type', tr.transaction_type,
        'vendor_id', tr.vendor_entity_id
    ) as metadata
FROM cortex_finance.transactions tr;

-- Universal relationships view
CREATE VIEW cortex_intel.all_relationships AS
SELECT 
    er.id, er.from_entity_id,
    ae1.entity_type as from_entity_type, ae1.name as from_entity_name,
    er.to_entity_id, ae2.entity_type as to_entity_type, ae2.name as to_entity_name,
    er.content_type, er.content_id, ac.title as content_title,
    er.relationship_type, er.metadata, er.weight, er.created_at, er.is_bidirectional,
    CASE 
        WHEN er.to_entity_id IS NOT NULL THEN 'entity_to_entity'
        ELSE 'entity_to_content'
    END as link_type
FROM cortex_foundation.entity_relationships er
LEFT JOIN cortex_intel.all_entities ae1 ON er.from_entity_id = ae1.id
LEFT JOIN cortex_intel.all_entities ae2 ON er.to_entity_id = ae2.id
LEFT JOIN cortex_intel.all_content ac ON er.content_id::text = ac.id::text 
    AND er.content_type = ac.content_type
WHERE er.is_active = TRUE;